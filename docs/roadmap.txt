POKEMON CARD MARKETPLACE PROJECT FOR WEB DEVELOPMENT COURSE WITH geminicodeassist
--------------------------------------------------------------------------------------------
- PROJECT DESCRIPTION
------------------------------------------------------------------------------------------------
  - This project consists of a web application that allows users to buy and sell Pokemon TCG cards.
  - The application will allow users to register, log in, view the catalog of available cards, buy cards, sell cards, and view their purchase and sales history.
  - Users will be able to search for cards by name, type, rarity, expansion, price, etc.
  - Users will be able to add cards to their shopping cart and purchase them.
  - Users will be able to sell cards and receive money for them.
  - Users will be able to view their purchase and sales history.
  - Users will be able to view their profile and edit their personal information.
  - Users will be able to view their account balance and recharge it.
  - Users will be able to view their card collection and add cards to their collection.
  - Users will be able to view other users' profiles and send them private messages.

- TECHNOLOGY STACK
------------------------------------------------------------------------------------------------
  - Frontend: Astro with Vue.js components
  - Backend: Supabase (Database + Edge Functions + Auth + Realtime + Storage)
  - Database: Supabase PostgreSQL with Row Level Security
  - Authentication: Supabase Auth
  - Real-time Features: Supabase Realtime for messaging and live updates
  - File Storage: Supabase Storage for card images and user avatars
  - Testing: Vitest for unit/integration tests, Playwright for E2E tests
  - Hosting: Vercel (Frontend only)
  - Development: Supabase CLI for local development and database migrations
------------------------------------------------------------------------------------------------
- ENTITIES (Supabase Database Tables)
------------------------------------------------------------------------------------------------
  - User (Supabase Auth.users + user_profiles table)
    - Core data in auth.users (managed by Supabase Auth):
      - id (UUID, auto-generated by Supabase Auth)
      - email (managed by Supabase Auth)
      - email_confirmed_at
      - created_at, updated_at
    - Extended data in user_profiles table:
      - user_id (references auth.users.id)
      - firstName
      - lastName
      - dateOfBirth
      - address
      - city
      - postalCode
      - country
      - balance
      - role (buyer, seller, admin)
      - displayName
      - bio
      - tradingReputation
      - privacySettings
      - notificationPreferences
    
  - UserProfile (Extended user information)
    - id (UUID)
    - userId (FK to Supabase Auth user)
    - avatarUrl (Supabase Storage URL)
    - bio
    - location
    - favoriteCardType
    - tradingPreferences (JSON)
    - isPublic
    - allowMessages
    - showCollection
    - totalTrades
    - rating
    - ratingCount
    
  - Card
    - id (UUID)
    - name
    - type
    - rarity
    - expansion
    - price
    - stock
    - imageUrl (Supabase Storage URL)
    - description
    - sellerId (FK to User)
    - condition
    - cardNumber
    - artist
    - isForSale
    
  - Message (Real-time with Supabase Realtime)
    - id (UUID)
    - senderId (FK to User)
    - recipientId (FK to User)
    - subject
    - content
    - isRead
    - readAt
    
  - Purchase
    - id (UUID)
    - buyerId (FK to User)
    - cardId (FK to Card)
    - quantity
    - unitPrice
    - totalPrice
    - status
    - transactionId
    - purchaseDate
    
  - Sale
    - id (UUID)
    - sellerId (FK to User)
    - cardId (FK to Card)
    - buyerId (FK to User)
    - quantity
    - unitPrice
    - totalPrice
    - commission
    - netAmount
    - status
    - purchaseId (FK to Purchase)
    
  - Collection
    - id (UUID)
    - userId (FK to User)
    - cardId (FK to Card)
    - quantity
    - condition
    - acquiredDate
    - acquiredPrice
    - currentValue
    - isForTrade
    - notes
    
  - CartItem
    - id (UUID)
    - userId (FK to User)
    - cardId (FK to Card)
    - quantity
    - priceAtTime
    - isActive
    - reservedUntil
------------------------------------------------------------------------------------------------
- FUNCTIONALITIES (Supabase Integration)
------------------------------------------------------------------------------------------------
  Authentication & User Management (Supabase Auth):
  - User registration with email verification
  - User login with session management
  - Password recovery with email templates
  - Social authentication (Google, GitHub, etc.)
  
  Card Management (Supabase Database + Storage):
  - View card catalog with pagination and filtering
  - Search cards by name, type, rarity, expansion, price (using database functions)
  - View detailed card information
  - Upload and manage card images (Supabase Storage)
  
  Shopping & Transactions (Supabase + Edge Functions):
  - Add cards to shopping cart
  - Purchase cards from cart (with payment processing via Edge Functions)
  - Inventory management with real-time stock updates
  
  Selling (Supabase Database):
  - List cards for sale
  - Manage sale listings
  - Automatic commission calculation
  
  User Profile & Account (Supabase Database + Storage):
  - View and edit user profile
  - Profile image upload (Supabase Storage)
  - Account balance management
  - Balance recharge functionality (Edge Functions for payment processing)
  
  Collection Management (Supabase Database):
  - View personal card collection
  - Add cards to collection (automatic after purchase)
  - Collection analytics and valuation
  
  Social Features (Supabase Realtime):
  - View other users' public profiles
  - Send private messages (real-time with Supabase Realtime)
  - Receive private messages with live notifications
  - Message management (read/unread status, deletion)
  
  Transaction History (Supabase Database):
  - Purchase history with detailed information
  - Sales history with commission details
  - Transaction analytics and reporting
  
  Real-time Features (Supabase Realtime):
  - Live chat and messaging
  - Real-time inventory updates
  - Live marketplace activity feeds
  - Instant notifications for transactions
------------------------------------------------------------------------------------------------
- USER ROLES (Supabase RLS Policies)
------------------------------------------------------------------------------------------------
  Buyer Role:
    - Browse card catalog (public access)
    - Search and filter cards (database functions)
    - View card details (public access)
    - Add cards to cart (authenticated, own cart only)
    - Purchase cards (authenticated, with payment validation)
    - View purchase history (RLS: own purchases only)
    - Manage personal profile (RLS: own profile only)
    - View account balance (RLS: own balance only)
    - Recharge account balance (authenticated, Edge Functions)
    - View personal collection (RLS: own collection only)
    - Add cards to collection (RLS: own collection only)
    - View public profiles of other users
    - Send private messages (authenticated, rate limited)
    - Receive and manage private messages (RLS: own messages only)
    
  Seller Role (includes all Buyer permissions plus):
    - List cards for sale (authenticated, with image upload)
    - Manage sale listings (RLS: own listings only)
    - View sales history (RLS: own sales only)
    - Receive sale payments (automatic via Edge Functions)
    - Manage inventory (RLS: own cards only)
    - View sales analytics (RLS: own data only)
    
  Admin Role (includes all permissions plus):
    - Manage all user accounts
    - Moderate content and messages
    - Access system analytics
    - Manage card database
    - Configure system settings
    - Handle disputes and refunds
------------------------------------------------------------------------------------------------
- PAGES (Astro + Vue.js Components)
------------------------------------------------------------------------------------------------
  Public Pages (No authentication required):
  - Home page (card highlights, featured listings)
  - User registration page (Supabase Auth integration)
  - User login page (Supabase Auth integration)  
  - Password recovery page (Supabase Auth integration)
  - Card catalog page (public card browsing)
  - Card detail page (individual card information)
  
  Authenticated Pages (Require Supabase Auth):
  - User dashboard (personal overview)
  - Shopping cart page (cart management)
  - Purchase confirmation page (transaction processing)
  - Card selling page (create sale listings)
  - Purchase history page (transaction history)
  - Sales history page (seller transaction history)
  - User profile page (view own profile)
  - Edit profile page (profile management with image upload)
  - Account balance page (balance management)
  - Balance recharge page (payment processing)
  - Personal collection page (owned cards)
  - Collection details page (individual collection management)
  - Other user profile page (view public profiles)
  - Private messages page (message inbox with real-time updates)
  - Message detail page (individual message view)
  - Purchase list page (purchase management)
  - Purchase details page (individual purchase details)
  - Sales list page (sales management)
  - Sales details page (individual sale details)
  - Sold cards list page (seller inventory)
  - Purchased cards list page (buyer history)

- DEVELOPMENT PHASES (Supabase-First Approach)
------------------------------------------------------------------------------------------------
  Phase 1: Supabase Setup & Foundation
  - Initialize Supabase project and configure environment
  - Set up database schema with RLS policies
  - Configure Supabase Auth with email templates
  - Set up Supabase Storage for images
  - Initialize Astro project with Vue.js integration
  - Configure Supabase JavaScript client
  
  Phase 2: Core Authentication & User Management
  - Implement user registration with Supabase Auth
  - Implement login/logout functionality
  - Implement password recovery
  - Create user profile management with image upload
  - Set up protected routes and authentication guards
  
  Phase 3: Card Management & Catalog
  - Implement card catalog with pagination
  - Implement card search and filtering using database functions
  - Create card detail pages
  - Implement card image upload for sellers
  
  Phase 4: Shopping & Transactions
  - Implement shopping cart functionality
  - Create purchase flow with Edge Functions for payment processing
  - Implement inventory management with real-time updates
  - Create transaction history and analytics
  
  Phase 5: Selling & Marketplace
  - Implement card listing functionality
  - Create seller dashboard and analytics
  - Implement commission calculations
  - Create marketplace management tools
  
  Phase 6: Social Features & Real-time
  - Implement private messaging with Supabase Realtime
  - Create user profiles and social features
  - Implement real-time notifications
  - Create community features and user interactions
  
  Phase 7: Advanced Features & Optimization
  - Implement collection management and analytics
  - Create advanced search and recommendation features
  - Optimize performance and implement caching
  - Add monitoring and analytics
  
  Phase 8: Testing & Deployment
  - Comprehensive testing (unit, integration, E2E)
  - Performance optimization
  - Security audit and penetration testing
  - Production deployment to Vercel
  - Monitoring and logging setup